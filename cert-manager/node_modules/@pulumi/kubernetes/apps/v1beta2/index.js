"use strict";
// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__exportStar(require("./controllerRevision"), exports);
__exportStar(require("./controllerRevisionList"), exports);
__exportStar(require("./daemonSet"), exports);
__exportStar(require("./daemonSetList"), exports);
__exportStar(require("./deployment"), exports);
__exportStar(require("./deploymentList"), exports);
__exportStar(require("./replicaSet"), exports);
__exportStar(require("./replicaSetList"), exports);
__exportStar(require("./statefulSet"), exports);
__exportStar(require("./statefulSetList"), exports);
// Import resources to register:
const controllerRevision_1 = require("./controllerRevision");
const controllerRevisionList_1 = require("./controllerRevisionList");
const daemonSet_1 = require("./daemonSet");
const daemonSetList_1 = require("./daemonSetList");
const deployment_1 = require("./deployment");
const deploymentList_1 = require("./deploymentList");
const replicaSet_1 = require("./replicaSet");
const replicaSetList_1 = require("./replicaSetList");
const statefulSet_1 = require("./statefulSet");
const statefulSetList_1 = require("./statefulSetList");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "kubernetes:apps/v1beta2:ControllerRevision":
                return new controllerRevision_1.ControllerRevision(name, undefined, { urn });
            case "kubernetes:apps/v1beta2:ControllerRevisionList":
                return new controllerRevisionList_1.ControllerRevisionList(name, undefined, { urn });
            case "kubernetes:apps/v1beta2:DaemonSet":
                return new daemonSet_1.DaemonSet(name, undefined, { urn });
            case "kubernetes:apps/v1beta2:DaemonSetList":
                return new daemonSetList_1.DaemonSetList(name, undefined, { urn });
            case "kubernetes:apps/v1beta2:Deployment":
                return new deployment_1.Deployment(name, undefined, { urn });
            case "kubernetes:apps/v1beta2:DeploymentList":
                return new deploymentList_1.DeploymentList(name, undefined, { urn });
            case "kubernetes:apps/v1beta2:ReplicaSet":
                return new replicaSet_1.ReplicaSet(name, undefined, { urn });
            case "kubernetes:apps/v1beta2:ReplicaSetList":
                return new replicaSetList_1.ReplicaSetList(name, undefined, { urn });
            case "kubernetes:apps/v1beta2:StatefulSet":
                return new statefulSet_1.StatefulSet(name, undefined, { urn });
            case "kubernetes:apps/v1beta2:StatefulSetList":
                return new statefulSetList_1.StatefulSetList(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("kubernetes", "apps/v1beta2", _module);
//# sourceMappingURL=index.js.map