"use strict";
// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
// Export members:
__exportStar(require("./csistorageCapacity"), exports);
__exportStar(require("./csistorageCapacityList"), exports);
__exportStar(require("./volumeAttachment"), exports);
__exportStar(require("./volumeAttachmentList"), exports);
// Import resources to register:
const csistorageCapacity_1 = require("./csistorageCapacity");
const csistorageCapacityList_1 = require("./csistorageCapacityList");
const volumeAttachment_1 = require("./volumeAttachment");
const volumeAttachmentList_1 = require("./volumeAttachmentList");
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "kubernetes:storage.k8s.io/v1alpha1:CSIStorageCapacity":
                return new csistorageCapacity_1.CSIStorageCapacity(name, undefined, { urn });
            case "kubernetes:storage.k8s.io/v1alpha1:CSIStorageCapacityList":
                return new csistorageCapacityList_1.CSIStorageCapacityList(name, undefined, { urn });
            case "kubernetes:storage.k8s.io/v1alpha1:VolumeAttachment":
                return new volumeAttachment_1.VolumeAttachment(name, undefined, { urn });
            case "kubernetes:storage.k8s.io/v1alpha1:VolumeAttachmentList":
                return new volumeAttachmentList_1.VolumeAttachmentList(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("kubernetes", "storage.k8s.io/v1alpha1", _module);
//# sourceMappingURL=index.js.map